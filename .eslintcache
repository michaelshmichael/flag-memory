[{"C:\\Users\\user\\Desktop\\flag-memory\\src\\index.js":"1","C:\\Users\\user\\Desktop\\flag-memory\\src\\App.js":"2","C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\Header.js":"3","C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\GameLogic.js":"4","C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\MainContainer.js":"5","C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\CardTemplate.js":"6","C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\HowToPlay.js":"7"},{"size":481,"mtime":1608392304024,"results":"8","hashOfConfig":"9"},{"size":187,"mtime":1608367529313,"results":"10","hashOfConfig":"9"},{"size":2083,"mtime":1608453760173,"results":"11","hashOfConfig":"9"},{"size":5033,"mtime":1608385007642,"results":"12","hashOfConfig":"9"},{"size":626,"mtime":1608371183989,"results":"13","hashOfConfig":"9"},{"size":416,"mtime":1608384780218,"results":"14","hashOfConfig":"9"},{"size":228,"mtime":1608392371463,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"pb0fwb",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\user\\Desktop\\flag-memory\\src\\index.js",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './components/Header';\nimport GameLogic from './components/GameLogic';\nimport HowToPlay from './components/HowToPlay'\n\nimport {Route, BrowserRouter as Router} from 'react-router-dom'\nimport './styles/Cards.css'\n\n\nReactDOM.render(\n  <Router>\n      <Route path='/' exact component={GameLogic} />\n      <Route path='/howtoplay' component={HowToPlay} />\n  </Router>,\n  document.getElementById('root')\n);\n\n",["35","36"],"C:\\Users\\user\\Desktop\\flag-memory\\src\\App.js",[],["37","38"],"C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\Header.js",[],"C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\GameLogic.js",["39"],"import React, {useState, useEffect} from 'react'\r\nimport Header from './Header'\r\nimport MainContainer from './MainContainer'\r\n\r\nimport ad from '../images/ad.png'\r\nimport am from '../images/am.png'\r\nimport bg from '../images/bg.png'\r\nimport bv from '../images/bv.png'\r\nimport by from '../images/by.png'\r\nimport ci from '../images/ci.png'\r\nimport az from '../images/az.png'\r\nimport at from '../images/at.png'\r\nimport al from '../images/al.png'\r\n\r\nimport bf from '../images/bf.png'\r\nimport bw from '../images/bw.png'\r\nimport cd from '../images/cd.png'\r\nimport cm from '../images/cm.png'\r\nimport dj from '../images/dj.png'\r\nimport er from '../images/er.png'\r\nimport et from '../images/et.png'\r\nimport ga from '../images/ga.png'\r\nimport mz from '../images/mz.png'\r\nimport na from '../images/na.png'\r\nimport sn from '../images/sn.png'\r\nimport so from '../images/so.png'\r\n\r\nimport af from '../images/af.png'\r\nimport bn from '../images/bn.png'\r\nimport bt from '../images/bt.png'\r\nimport hk from '../images/hk.png'\r\nimport jp from '../images/jp.png'\r\nimport kg from '../images/kg.png'\r\nimport kh from '../images/kh.png'\r\nimport pk from '../images/pk.png'\r\nimport vn from '../images/vn.png'\r\n\r\nconst GameLogic = () => {\r\n    const europeanCountries = [\r\n        {src: ad, country: 'Andorra'},\r\n        {src: am, country: 'Armenia'},\r\n        {src: bg, country: 'Bulgaria'},\r\n        {src: at, country: 'Austria'},\r\n        {src: al, country: 'Albania'},\r\n        {src: ci, country: 'Ireland'},\r\n        {src: bv, country: 'Norway'},\r\n        {src: by, country: 'Belarus'},\r\n        {src: az, country: 'Azerbaijan'}\r\n    ]\r\n    const africanCountries = [\r\n        {src: bf, country: 'Burkina Faso'},\r\n        {src: bw, country: 'Botswana'},\r\n        {src: cd, country: 'Congo'},\r\n        {src: cm, country: 'Cameroon'},\r\n        {src: dj, country: 'Djibouti'},\r\n        {src: er, country: 'Eritrea'},\r\n        {src: et, country: 'Ethiopia'},\r\n        {src: ga, country: 'Gabon'},\r\n        {src: mz, country: 'Mozambique'},\r\n        {src: na, country: 'Namibia'},\r\n        {src: sn, country: 'Senegal'},\r\n        {src: so, country: 'Somalia'}\r\n    ]\r\n    const asianCountries = [\r\n        {src: af, country: 'Afghanistan'},\r\n        {src: bn, country: 'Brunei'},\r\n        {src: bt, country: 'Bhutan'},\r\n        {src: hk, country: 'Hong Kong'},\r\n        {src: jp, country: 'Japan'},\r\n        {src: kg, country: 'Kyrgyzstan'},\r\n        {src: kh, country: 'Cambodia'},\r\n        {src: pk, country: 'Pakistan'},\r\n        {src: vn, country: 'Vietnam'}\r\n    ]\r\n\r\n    const [selectedContinent, setSelectedContinent] = useState(europeanCountries)\r\n    const [cards, setCards] = useState(selectedContinent)\r\n    const [score, setScore] = useState(0);\r\n    const [highScore, setHighScore] = useState(0);\r\n    const [newArray, setNewArray] = useState([])\r\n\r\n    const updateScore = (e) => {\r\n        console.log(e.target.id)\r\n        if(newArray.includes(e.target.id)){\r\n            setScore(0)\r\n            setNewArray([])\r\n            alert('Game Over')\r\n        } else {\r\n            setScore(score+1)\r\n            setNewArray((newArray) => [...newArray, e.target.id])\r\n        }\r\n    }\r\n\r\n    const changeContinentResetScore = () => {\r\n        setScore(0)\r\n    }\r\n\r\n    const createRandomIndex = () => {\r\n        return Math.floor(Math.random() * 7);\r\n    }\r\n\r\n    const makeRandomArray = () => {\r\n        let randomCards = []\r\n        while(randomCards.length < 6) {\r\n            let randomIndex = createRandomIndex()\r\n            let randomCard = selectedContinent[randomIndex]\r\n            if(randomCards.includes(randomCard) === false){\r\n                randomCards.push(randomCard)\r\n            }\r\n        }\r\n        return randomCards\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Updates Score\r\n        if(score > highScore){\r\n            setHighScore(score)\r\n        }\r\n        //Reshuffles cards\r\n        let randomCards = makeRandomArray()\r\n        setCards(randomCards)\r\n    }, [score, highScore, selectedContinent])\r\n\r\n    const changeContinent = (continent) => {\r\n        // eslint-disable-next-line default-case\r\n        switch(continent.target.id){\r\n            case 'Africa':\r\n                setSelectedContinent(africanCountries)\r\n                changeContinentResetScore()\r\n                break\r\n            case 'Europe':\r\n                setSelectedContinent(europeanCountries)\r\n                changeContinentResetScore()\r\n                break\r\n            case 'Asia':\r\n                setSelectedContinent(asianCountries)\r\n                changeContinentResetScore()\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Header score={score} \r\n                highScore={highScore} \r\n                changeContinent={changeContinent}/>\r\n            <MainContainer score={score}\r\n                cards={cards} \r\n                highScore={highScore} \r\n                updateScore={updateScore} \r\n                changeContinentResetScore={changeContinentResetScore} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameLogic","C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\MainContainer.js",[],"C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\CardTemplate.js",[],"C:\\Users\\user\\Desktop\\flag-memory\\src\\components\\HowToPlay.js",[],{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":14},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":122,"column":8,"nodeType":"52","endLine":122,"endColumn":45,"suggestions":"53"},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeRandomArray'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [score, highScore, selectedContinent, makeRandomArray]",{"range":"59","text":"60"},[3966,4003],"[score, highScore, selectedContinent, makeRandomArray]"]